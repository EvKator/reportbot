{"version":3,"sources":["../src/user.js"],"names":["VkPhotoLikeTask","cheerio","require","request","bot","Task","DB","VkAcc","User","constructor","id","username","first_name","last_name","status","balance","key","vk_acc","menu_id","last_message_id","createKey","uname","_existInDB","_id","_username","_first_name","_last_name","_status","_balance","_key","_vk_acc","_menu_id","_last_message_id","confirmfTask","taskname","task","fromDB","taskDone","workers","some","worker","user_id","err","confirmed","confirm","skipTask","skip","user","createVkPhotoLikeTask","url","required","Number","isNaN","finalCost","cost","Create","saveToDB","_spendMoney","console","log","stack","createVkPostLikeTask","update","UpdateUser","vkAccUsed","vk_uname","result","res","FindUserByVk","fromJSON","delVkAcc","addVkAcc","vk_link","exec","toString","used","html","$","load","userStatus","vk_id","vkacc","toJSON","getPaid","coins","getSender","msg","telegUser","from","InsertUser","jsonU","FindUser","createdTasks","GetTasksOfUser","lastname","amount","ExistInDB","val","n","s","length","String","fromCharCode","Math","random","replace"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,MAAOC,UAAUC,QAAQ,SAAR,CAAjB;AACA,MAAOC,UAAUD,QAAQ,iBAAR,CAAjB;AACA,OAAOE,GAAP,MAAgB,WAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,MAAMC,IAAN,CAAU;;AAErBC,gBAAYC,EAAZ,EAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,MAAjD,EAAyDC,OAAzD,EAAkEC,GAAlE,EAAuEC,MAAvE,EAA+EC,OAA/E,EAAwFC,eAAxF,EAAwG;AACpG,YAAG,CAACL,MAAJ,EAAW;AACPA,qBAAS,UAAT;AACAC,sBAAU,CAAV;AACAC,kBAAMI,UAAU,EAAV,CAAN;AACAH,qBAAS,EAACI,OAAM,EAAP,EAAUX,IAAG,EAAb,EAAT;AACAQ,sBAAU,EAAV;AACA,iBAAKI,UAAL,GAAkB,KAAlB;AACAH,8BAAkB,CAAlB;AACH,SARD,MAUI,KAAKG,UAAL,GAAkB,IAAlB;AACJ,aAAKC,GAAL,GAAWb,EAAX;AACA,aAAKc,SAAL,GAAiBb,QAAjB;AACA,aAAKc,WAAL,GAAmBb,UAAnB;AACA,aAAKc,UAAL,GAAkBb,SAAlB;AACA,aAAKc,OAAL,GAAeb,MAAf;AACA,aAAKc,QAAL,GAAgBb,OAAhB;AACA,aAAKc,IAAL,GAAYb,GAAZ;AACA,aAAKc,OAAL,GAAeb,MAAf;AACA,aAAKc,QAAL,GAAgBb,OAAhB;AACA,aAAKc,gBAAL,GAAwBb,eAAxB;AACH;;AAED,UAAMc,YAAN,CAAmBC,QAAnB,EAA4B;AACxB,YAAIC,OAAO,MAAM9B,KAAK+B,MAAL,CAAYF,QAAZ,CAAjB;AACA,YAAIG,QAAJ;AACA,YAAG;AACC,gBAAGF,KAAKG,OAAR,EAAgB;AACZD,2BAAWF,KAAKG,OAAL,CAAaC,IAAb,CAAmBC,MAAD,IAAY;AACrC,2BAAOA,OAAOC,OAAP,IAAkB,KAAK/B,EAA9B;AACH,iBAFU,CAAX;AAGH;AACJ,SAND,CAMC,OAAMgC,GAAN,EAAU;AACP,kBAAM,qGAAN;AACH;AACD,YAAGL,QAAH,EACI,MAAM,6BAAN;AACJ,YAAIF,IAAJ,EAAU;AACN,gBAAIQ,YAAY,MAAMR,KAAKS,OAAL,CAAa,IAAb,CAAtB;AACA,gBAAG,CAACD,SAAJ,EACI,MAAM,qGAAN;AACP;;AAED,eAAOR,IAAP;AACH;;AAED,UAAMU,QAAN,CAAeX,QAAf,EAAwB;AACpB,YAAIC,OAAO,MAAM9B,KAAK+B,MAAL,CAAYF,QAAZ,CAAjB;AACAC,aAAKW,IAAL,CAAUC,IAAV;AACH;;AAED,UAAMC,qBAAN,CAA4BC,GAA5B,EAAiCC,QAAjC,EAA0C;AACtCA,mBAAWC,OAAOD,QAAP,CAAX;AACA,YAAGE,MAAMF,QAAN,CAAH,EACI,MAAM,4CAAN;;AAEJ,YAAIG,YAAYH,WAAWlD,gBAAgBsD,IAA3C;;AAEA,YAAG,OAAOJ,QAAP,IAAkB,QAArB,EAA8B;AAC1B,kBAAM,4CAAN;AACH,SAFD,MAGK,IAAGG,YAAY,KAAKtC,OAApB,EACD,MAAM,6CAA6C,KAAKA,OAAlD,GAA4D,gBAA5D,GAA+EsC,SAArF,CADC,KAEA,IAAGA,aAAa,CAAhB,EACD,MAAM,8DAAN;;AAEJ,YAAIlB,OAAO,MAAM9B,KAAKkD,MAAL,CAAYN,GAAZ,EAAiB,oBAAjB,EAAuCC,QAAvC,EAAiD,KAAKxC,EAAtD,CAAjB,CAfsC,CAeqC;;AAE3E,YAAI;AACA,kBAAMyB,KAAKqB,QAAL,EAAN;AACA,iBAAKC,WAAL,CAAiBtB,KAAKmB,IAAL,GAAYJ,QAA7B;AACH,SAHD,CAIA,OAAOR,GAAP,EAAW;AACPgB,oBAAQC,GAAR,CAAY,KAAZ;AACAD,oBAAQC,GAAR,CAAYjB,IAAIkB,KAAhB;AACA,kBAAM,yGAAN;AACH;AAEJ;;AAED,UAAMC,oBAAN,CAA2BZ,GAA3B,EAAgCC,QAAhC,EAAyC;AACrCA,mBAAWC,OAAOD,QAAP,CAAX;AACA,YAAGE,MAAMF,QAAN,CAAH,EACI,MAAM,4CAAN;;AAEJ,YAAIG,YAAYH,WAAWlD,gBAAgBsD,IAA3C;;AAEA,YAAG,OAAOJ,QAAP,IAAkB,QAArB,EAA8B;AAC1B,kBAAM,4CAAN;AACH,SAFD,MAGK,IAAGG,YAAY,KAAKtC,OAApB,EACD,MAAM,6CAA6C,KAAKA,OAAlD,GAA4D,gBAA5D,GAA+EsC,SAArF,CADC,KAEA,IAAGA,aAAa,CAAhB,EACD,MAAM,8DAAN;;AAEJ,YAAIlB,OAAO,MAAM9B,KAAKkD,MAAL,CAAYN,GAAZ,EAAiB,mBAAjB,EAAsCC,QAAtC,EAAgD,KAAKxC,EAArD,CAAjB,CAfqC,CAeqC;;AAE1E,cAAMyB,KAAKqB,QAAL,EAAN;AACA,aAAKC,WAAL,CAAiBtB,KAAKmB,IAAL,GAAYJ,QAA7B;AAEH;;AAED,UAAMY,MAAN,GAAc;AACV,cAAMxD,GAAGyD,UAAH,CAAc,IAAd,CAAN;AACH;;AAED,iBAAaC,SAAb,CAAuBC,QAAvB,EAAgC;AAC5B,YAAIC,SAAS,IAAb;AACA,YAAIC,MAAM,MAAM7D,GAAG8D,YAAH,CAAgBH,QAAhB,CAAhB;AACA,YAAI;AACAlB,mBAAOvC,KAAK6D,QAAL,CAAcF,GAAd,CAAP;AACAD,qBAAS,IAAT;AACH,SAHD,CAIA,OAAOxB,GAAP,EAAW;AACPwB,qBAAS,KAAT;AACH;AACD,eAAOA,MAAP;AACH;;AAED,UAAMI,QAAN,GAAgB;AACZ,aAAKxC,OAAL,CAAaT,KAAb,GAAqB,EAArB;AACA,aAAKS,OAAL,CAAapB,EAAb,GAAkB,EAAlB;AACA,aAAKoD,MAAL;AACH;;AAED,UAAMS,QAAN,CAAeC,OAAf,EAAwB;AAAC;AACrB,YAAIP,WAAY,0BAAD,CAA6BQ,IAA7B,CAAkCD,OAAlC,EAA2C,CAA3C,EAA8CE,QAA9C,EAAf;;AAEA,YAAIC,OAAO,MAAMnE,KAAKwD,SAAL,CAAeC,QAAf,CAAjB;AACA,YAAG,CAACU,IAAJ,EAAS;AACLH,sBAAU,oBAAoBP,QAA9B;AACA,gBAAIW,OAAO,MAAMzE,QAAQqE,OAAR,CAAjB;;AAEA,gBAAIK,IAAI5E,QAAQ6E,IAAR,CAAaF,IAAb,CAAR;AACA,gBAAIG,aAAaF,EAAE,eAAF,EAAmBD,IAAnB,EAAjB;AACA,gBAAII,KAAJ;AACA,gBAAG;AACCA,wBAAQ,cAAcP,IAAd,CAAmBG,IAAnB,EAAyB,CAAzB,CAAR,CADD,CACsC;AACxC,aAFD,CAGA,OAAMlC,GAAN,EAAU;AACN,sBAAM,qIAAN;AACH;AACD,gBAAI,KAAK1B,GAAL,IAAY+D,UAAhB,EAA4B;AACxB,oBAAIE,QAAQ,IAAI1E,KAAJ,CAAU0D,QAAV,EAAoBe,KAApB,CAAZ;AACA,qBAAKlD,OAAL,GAAemD,MAAMC,MAAN,EAAf;AACH,aAHD,MAIK,IAAGH,eAAe,IAAlB,EAAuB;AACxB,sBAAM,wIAAN;AACH,aAFI,MAGA;AACD,sBAAM,uCAAuCA,UAA7C;AACH;AACJ,SAvBD,MAwBK,MAAM,qDAAN;AACR;;AAED,UAAMI,OAAN,CAAcC,KAAd,EAAoB;AAChB,aAAKxD,QAAL,GAAgBuB,OAAO,KAAKvB,QAAZ,IAAwBuB,OAAOiC,KAAP,CAAxC;AACA,cAAM,KAAKtB,MAAL,EAAN;AACH;;AAED,iBAAauB,SAAb,CAAuBC,GAAvB,EAA2B;AACvB,YAAIC,YAAYD,IAAIE,IAApB;AACA,YAAIzC,IAAJ;AACA,YAAG;AACCA,mBAAO,MAAMvC,KAAK4B,MAAL,CAAYmD,UAAU7E,EAAtB,CAAb;AACH,SAFD,CAGA,OAAMgC,GAAN,EAAW;AACPK,mBAAO,IAAIvC,IAAJ,CAAU+E,UAAU7E,EAApB,EAAwB6E,UAAU5E,QAAlC,EAA4C4E,UAAU3E,UAAtD,EAAkE2E,UAAU1E,SAA5E,CAAP;AACH;AACD,eAAOkC,IAAP;AACH;;AAED,UAAMS,QAAN,GAAgB;AACZ,cAAMlD,GAAGmF,UAAH,CAAc,IAAd,CAAN;AACH;;AAED,iBAAarD,MAAb,CAAoB1B,EAApB,EAAuB;AACnB,cAAMgF,QAAQ,MAAMpF,GAAGqF,QAAH,CAAYjF,EAAZ,CAApB;AACA,YAAIqC,OAAOvC,KAAK6D,QAAL,CAAcF,GAAd,CAAX;AACA,eAAOpB,IAAP;AACH;;AAED,UAAM6C,YAAN,GAAoB;AAChB,eAAO,MAAMvF,KAAKwF,cAAL,CAAoB,IAApB,CAAb;AACH;;AAED,WAAOxB,QAAP,CAAgBqB,KAAhB,EAAsB;AAClB,eAAO,IAAIlF,IAAJ,CAAUkF,MAAMhF,EAAhB,EAAoBgF,MAAM/E,QAA1B,EAAoC+E,MAAM9E,UAA1C,EAAsD8E,MAAM7E,SAA5D,EAAuE6E,MAAM5E,MAA7E,EACF4E,MAAM3E,OADJ,EACa2E,MAAM1E,GADnB,EACwB0E,MAAMzE,MAD9B,EACsCyE,MAAMxE,OAD5C,EACqDwE,MAAMvE,eAD3D,CAAP;AAEH;;AAED+D,aAAQ;AACJ,YAAIQ,QAAQ;AACRhF,gBAAK,KAAKA,EADF;AAERC,sBAAW,KAAKA,QAFR;AAGRC,wBAAa,KAAKA,UAHV;AAIRC,uBAAY,KAAKiF,QAJT;AAKRhF,oBAAS,KAAKA,MALN;AAMRC,qBAAU,KAAKA,OANP;AAORC,iBAAM,KAAKA,GAPH;AAQRC,oBAAS;AACLI,uBAAQ,KAAKJ,MAAL,CAAYI,KADf;AAELX,oBAAI,KAAKO,MAAL,CAAYP;AAFX,aARD;AAYRQ,qBAAU,KAAKA,OAZP;AAaRC,6BAAkB,KAAKA;AAbf,SAAZ;AAeA,eAAOuE,KAAP;AACH;;AAED,UAAMjC,WAAN,CAAkBsC,MAAlB,EAAyB;AACrB,aAAKnE,QAAL,IAAemE,MAAf;AACA,cAAM,KAAKjC,MAAL,EAAN;AACH;AACD;AACA,QAAI5C,OAAJ,CAAYA,OAAZ,EAAoB;AAChB,aAAKa,QAAL,GAAgBb,OAAhB;AACA,aAAK4C,MAAL;AACH;;AAED,QAAI5C,OAAJ,GAAa;AACT,eAAO,KAAKa,QAAZ;AACH;;AAED,QAAIjB,MAAJ,CAAWA,MAAX,EAAkB;AACd,aAAKa,OAAL,GAAeb,MAAf;AACA,aAAKgD,MAAL;AACH;;AAED,QAAIhD,MAAJ,GAAY;AACR,eAAO,KAAKa,OAAZ;AACH;;AAED,QAAIqE,SAAJ,GAAe;AACX,eAAO,KAAK1E,UAAZ;AACH;;AAED,QAAIZ,EAAJ,GAAQ;AACJ,eAAO,KAAKa,GAAZ;AACH;;AAED,QAAIZ,QAAJ,GAAc;AACV,eAAO,KAAKa,SAAZ;AACH;;AAED,QAAIZ,UAAJ,GAAgB;AACZ,eAAO,KAAKa,WAAZ;AACH;;AAED,QAAIZ,SAAJ,GAAe;AACX,eAAO,KAAKa,UAAZ;AACH;;AAED,QAAIZ,MAAJ,GAAY;AACR,eAAO,KAAKa,OAAZ;AACH;;AAED,QAAIZ,OAAJ,GAAa;AACT,eAAO,KAAKa,QAAZ;AACH;;AAED,QAAIZ,GAAJ,CAAQA,GAAR,EAAY;AACR,aAAKa,IAAL,GAAYb,GAAZ;AACA,aAAK8C,MAAL;AACH;;AAED,QAAI9C,GAAJ,GAAS;AACL,eAAO,KAAKa,IAAZ;AACH;;AAED,QAAIZ,MAAJ,GAAY;AACR,eAAO,KAAKa,OAAZ;AACH;;AAED,QAAIX,eAAJ,GAAqB;AACjB,eAAO,KAAKa,gBAAZ;AACH;;AAED,QAAIb,eAAJ,CAAoB8E,GAApB,EAAwB;AACpB,aAAKjE,gBAAL,GAAwBiE,GAAxB;AACA,aAAKnC,MAAL;AACH;AA7RoB;;AAgSzB,SAAS1C,SAAT,CAAoB8E,CAApB,EAAsB;AAClB,QAAIC,IAAG,EAAP;AACA,WAAMA,EAAEC,MAAF,GAAWF,CAAjB,EACIC,KAAKE,OAAOC,YAAP,CAAoBC,KAAKC,MAAL,KAAgB,IAApC,EAA0CC,OAA1C,CAAkD,cAAlD,EAAiE,EAAjE,CAAL;AACJ,WAAON,CAAP;AACH","file":"user.js","sourcesContent":["import VkPhotoLikeTask from \"./VkPhotoLikeTask\";\r\nconst  cheerio = require('cheerio');\r\nconst  request = require('request-promise');\r\nimport bot from './TeleBot';\r\nimport Task from './task.js';\r\nimport DB from './DB';\r\nimport VkAcc from './VkAcc';\r\n\r\nexport default class User{\r\n\r\n    constructor(id, username, first_name, last_name, status, balance, key, vk_acc, menu_id, last_message_id){\r\n        if(!status){\r\n            status = 'new_user';\r\n            balance = 0;\r\n            key = createKey(30);\r\n            vk_acc = {uname:'',id:''};\r\n            menu_id = '';\r\n            this._existInDB = false;\r\n            last_message_id = 0;\r\n        }\r\n        else\r\n            this._existInDB = true;\r\n        this._id = id;\r\n        this._username = username;\r\n        this._first_name = first_name;\r\n        this._last_name = last_name;\r\n        this._status = status;\r\n        this._balance = balance;\r\n        this._key = key;\r\n        this._vk_acc = vk_acc;\r\n        this._menu_id = menu_id;\r\n        this._last_message_id = last_message_id;\r\n    }\r\n\r\n    async confirmfTask(taskname){\r\n        let task = await Task.fromDB(taskname);\r\n        let taskDone;\r\n        try{\r\n            if(task.workers){\r\n                taskDone = task.workers.some((worker) => {\r\n                    return worker.user_id == this.id;\r\n                });\r\n            }\r\n        }catch(err){\r\n            throw('Мне кажется, ты не выполнил задание. Если это не так, напиши, пожалуйста, в техподдержу, мы поможем');\r\n        }\r\n        if(taskDone)\r\n            throw 'Ты уже выполнял это задание';\r\n        if (task) {\r\n            let confirmed = await task.confirm(this);\r\n            if(!confirmed)\r\n                throw('Мне кажется, ты не выполнил задание. Если это не так, напиши, пожалуйста, в техподдержу, мы поможем');\r\n        }\r\n\r\n        return task;\r\n    }\r\n\r\n    async skipTask(taskname){\r\n        let task = await Task.fromDB(taskname);\r\n        task.skip(user);\r\n    }\r\n\r\n    async createVkPhotoLikeTask(url, required){\r\n        required = Number(required);\r\n        if(isNaN(required))\r\n            throw(\"Странное число...Не умею работать с такими\");\r\n\r\n        let finalCost = required * VkPhotoLikeTask.cost;\r\n\r\n        if(typeof(required)!=\"number\"){\r\n            throw(\"Странное число...Не умею работать с такими\");\r\n        }\r\n        else if(finalCost > this.balance)\r\n            throw(\"Кажется, финансы не позволяют. На счету \" + this.balance + \" руб, а нужно \" + finalCost);\r\n        else if(finalCost <= 0)\r\n            throw(\"Мы не можем крутить отрицательные и нулевые значения, извини\");\r\n\r\n        let task = await Task.Create(url, 'vk_photo_like_task', required, this.id);//new VkPhotoLikeTask(url, required, this.id);\r\n\r\n        try {\r\n            await task.saveToDB();\r\n            this._spendMoney(task.cost * required);\r\n        }\r\n        catch (err){\r\n            console.log('err');\r\n            console.log(err.stack);\r\n            throw(\"Неведомая ошибка на сервере. Пожалуйста, расскажи об этом техподдержке (последний пункт в главном меню)\")\r\n        }\r\n\r\n    }\r\n\r\n    async createVkPostLikeTask(url, required){\r\n        required = Number(required);\r\n        if(isNaN(required))\r\n            throw(\"Странное число...Не умею работать с такими\");\r\n\r\n        let finalCost = required * VkPhotoLikeTask.cost;\r\n\r\n        if(typeof(required)!=\"number\"){\r\n            throw(\"Странное число...Не умею работать с такими\");\r\n        }\r\n        else if(finalCost > this.balance)\r\n            throw(\"Кажется, финансы не позволяют. На счету \" + this.balance + \" руб, а нужно \" + finalCost);\r\n        else if(finalCost <= 0)\r\n            throw(\"Мы не можем крутить отрицательные и нулевые значения, извини\");\r\n\r\n        let task = await Task.Create(url, 'vk_post_like_task', required, this.id);//new VkPhotoLikeTask(url, required, this.id);\r\n\r\n        await task.saveToDB();\r\n        this._spendMoney(task.cost * required);\r\n\r\n    }\r\n\r\n    async update(){\r\n        await DB.UpdateUser(this);\r\n    }\r\n\r\n    static async vkAccUsed(vk_uname){\r\n        let result = true;\r\n        let res = await DB.FindUserByVk(vk_uname)\r\n        try {\r\n            user = User.fromJSON(res);\r\n            result = true;\r\n        }\r\n        catch (err){\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    async delVkAcc(){\r\n        this._vk_acc.uname = '';\r\n        this._vk_acc.id = '';\r\n        this.update();\r\n    }\r\n\r\n    async addVkAcc(vk_link) {///////////////////////////////////////////////////////////////vk acc retrying\r\n        let vk_uname = (/vk\\.com\\/([a-zA-Z0-9]*)/g).exec(vk_link)[1].toString();\r\n\r\n        let used = await User.vkAccUsed(vk_uname);\r\n        if(!used){\r\n            vk_link = 'https://vk.com/' + vk_uname;\r\n            let html = await request(vk_link);\r\n\r\n            let $ = cheerio.load(html);\r\n            let userStatus = $('div.pp_status').html();\r\n            let vk_id;\r\n            try{\r\n                vk_id = /photo(\\d+)_/.exec(html)[1]; ///owner_id=(\\d+)/.exec($('#wall_a_s').href)[1];\r\n            }\r\n            catch(err){\r\n                throw 'Страница скрыта для неавторизованых пользователей, я не могу взять нужную информацию. Я ошбиаюсь? Напиши в техподдержку, мы поможем';\r\n            }\r\n            if (this.key == userStatus) {\r\n                let vkacc = new VkAcc(vk_uname, vk_id);\r\n                this._vk_acc = vkacc.toJSON();\r\n            }\r\n            else if(userStatus === null){\r\n                throw \"Статус на странице скрыт или пуст. Пожалуста, поменяй настройки приватности, чтобы я (неавторизованный пользователь) смог его увидеть.\";\r\n            }\r\n            else {\r\n                throw \"Ошибка, статус на странице сейчас \" + userStatus;\r\n            }\r\n        }\r\n        else throw \"Ошибка, аккаунт уже привязан к другому пользователю\";\r\n    }\r\n\r\n    async getPaid(coins){\r\n        this._balance = Number(this._balance) + Number(coins);\r\n        await this.update();\r\n    }\r\n\r\n    static async getSender(msg){\r\n        let telegUser = msg.from;\r\n        let user;\r\n        try{\r\n            user = await User.fromDB(telegUser.id);\r\n        }\r\n        catch(err) {\r\n            user = new User( telegUser.id, telegUser.username, telegUser.first_name, telegUser.last_name);\r\n        }\r\n        return user;\r\n    }\r\n\r\n    async saveToDB(){\r\n        await DB.InsertUser(this);\r\n    }\r\n\r\n    static async fromDB(id){\r\n        const jsonU = await DB.FindUser(id);\r\n        let user = User.fromJSON(res);\r\n        return user;\r\n    }\r\n\r\n    async createdTasks(){\r\n        return await Task.GetTasksOfUser(this);\r\n    }\r\n\r\n    static fromJSON(jsonU){\r\n        return new User( jsonU.id, jsonU.username, jsonU.first_name, jsonU.last_name, jsonU.status,\r\n             jsonU.balance, jsonU.key, jsonU.vk_acc, jsonU.menu_id, jsonU.last_message_id);\r\n    }\r\n\r\n    toJSON(){\r\n        let jsonU = {\r\n            id : this.id,\r\n            username : this.username,\r\n            first_name : this.first_name,\r\n            last_name : this.lastname,\r\n            status : this.status,\r\n            balance : this.balance,\r\n            key : this.key,\r\n            vk_acc : {\r\n                uname : this.vk_acc.uname,\r\n                id: this.vk_acc.id\r\n            },\r\n            menu_id : this.menu_id,\r\n            last_message_id : this.last_message_id\r\n        };\r\n        return jsonU;\r\n    }\r\n\r\n    async _spendMoney(amount){\r\n        this._balance-=amount;\r\n        await this.update();\r\n    }\r\n    /////////////////////////////////getters,setters\r\n    set menu_id(menu_id){\r\n        this._menu_id = menu_id;\r\n        this.update();\r\n    }\r\n\r\n    get menu_id(){\r\n        return this._menu_id;\r\n    }\r\n    \r\n    set status(status){\r\n        this._status = status;\r\n        this.update();\r\n    }\r\n    \r\n    get status(){\r\n        return this._status;\r\n    }\r\n    \r\n    get ExistInDB(){\r\n        return this._existInDB;\r\n    }\r\n    \r\n    get id(){\r\n        return this._id;\r\n    }\r\n    \r\n    get username(){\r\n        return this._username;\r\n    }\r\n    \r\n    get first_name(){\r\n        return this._first_name;\r\n    }\r\n    \r\n    get last_name(){\r\n        return this._last_name;\r\n    }\r\n    \r\n    get status(){\r\n        return this._status;\r\n    }\r\n    \r\n    get balance(){\r\n        return this._balance;\r\n    }\r\n    \r\n    set key(key){\r\n        this._key = key;\r\n        this.update();\r\n    }\r\n    \r\n    get key(){\r\n        return this._key;\r\n    }\r\n    \r\n    get vk_acc(){\r\n        return this._vk_acc;\r\n    }\r\n    \r\n    get last_message_id(){\r\n        return this._last_message_id;\r\n    }\r\n    \r\n    set last_message_id(val){\r\n        this._last_message_id = val;\r\n        this.update();\r\n    }\r\n}\r\n\r\nfunction createKey (n){\r\n    var s ='';\r\n    while(s.length < n)\r\n        s += String.fromCharCode(Math.random() * 1106).replace(/[^a-zA-Z]|_/g,'');\r\n    return s;\r\n}\r\n"]}